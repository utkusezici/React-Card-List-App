[{"C:\\Users\\utkus\\Desktop\\React Uygulamalar\\card-list\\src\\index.js":"1","C:\\Users\\utkus\\Desktop\\React Uygulamalar\\card-list\\src\\App.js":"2","C:\\Users\\utkus\\Desktop\\React Uygulamalar\\card-list\\src\\reportWebVitals.js":"3","C:\\Users\\utkus\\Desktop\\React Uygulamalar\\card-list\\src\\Components\\Cards\\index.js":"4","C:\\Users\\utkus\\Desktop\\React Uygulamalar\\card-list\\src\\Pages\\Home\\index.js":"5","C:\\Users\\utkus\\Desktop\\React Uygulamalar\\card-list\\src\\Components\\Forms\\index.js":"6","C:\\Users\\utkus\\Desktop\\React Uygulamalar\\card-list\\src\\Components\\ImageUploader\\index.js":"7"},{"size":547,"mtime":1607594604743,"results":"8","hashOfConfig":"9"},{"size":191,"mtime":1607595496225,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":1165,"mtime":1608211200515,"results":"12","hashOfConfig":"9"},{"size":1750,"mtime":1608212946640,"results":"13","hashOfConfig":"9"},{"size":2182,"mtime":1608212902211,"results":"14","hashOfConfig":"9"},{"size":605,"mtime":1608211999380,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"czxte2",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"C:\\Users\\utkus\\Desktop\\React Uygulamalar\\card-list\\src\\index.js",[],["34","35"],"C:\\Users\\utkus\\Desktop\\React Uygulamalar\\card-list\\src\\App.js",["36"],"import logo from './logo.svg';\nimport './App.css';\n\nimport Home from './Pages/Home'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\utkus\\Desktop\\React Uygulamalar\\card-list\\src\\reportWebVitals.js",[],"C:\\Users\\utkus\\Desktop\\React Uygulamalar\\card-list\\src\\Components\\Cards\\index.js",[],"C:\\Users\\utkus\\Desktop\\React Uygulamalar\\card-list\\src\\Pages\\Home\\index.js",[],"C:\\Users\\utkus\\Desktop\\React Uygulamalar\\card-list\\src\\Components\\Forms\\index.js",["37"],"import React,{useState} from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\r\nimport ImageUploader from '../ImageUploader'\r\nfunction Forms({cardList,setCardList}) {\r\n    const [file , setFile] = useState(null)\r\n    const submitForm = (event) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        const formatedValues = {\r\n            title: data.get('title'),\r\n            subTitle: data.get('subTitle'),\r\n            description: data.get('description'),\r\n            file: file\r\n          };\r\n          setCardList((list) => [...list, formatedValues])\r\n      }\r\n    return (\r\n        <div>\r\n            <h2>KART EKLE</h2>\r\n            <Form onSubmit={submitForm}>\r\n                <FormGroup>\r\n                    <Label>Kart Başlığı</Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        id=\"title\"\r\n                        placeholder=\"Kart Başlığı Giriniz...\"\r\n                    />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label>Kart Alt Başlığı</Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"subTitle\"\r\n                        id=\"subTitle\"\r\n                        placeholder=\"Kart Alt Başlığı Giriniz...\"\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label>Açıklama</Label>\r\n                    <Input\r\n                        type=\"textarea\"\r\n                        rows=\"4\"\r\n                        name=\"description\"\r\n                        id=\"description\"\r\n                        placeholder=\"Açıklama Giriniz...\"\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label>Resim Seçiniz</Label>\r\n                    <ImageUploader setFile={(file)=>setFile(file)} file={file}/>\r\n                </FormGroup>\r\n                <Button type=\"Submit\" color=\"primary\" className=\"mt-3\" >Ekle</Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Forms;\r\n","C:\\Users\\utkus\\Desktop\\React Uygulamalar\\card-list\\src\\Components\\ImageUploader\\index.js",["38","39"],"import React, {useState} from \"react\";\r\nimport noImage from '../../Assets/noImageAvailable.jpg';\r\nfunction ImageUploader({setFile,file}) {\r\n\r\n   function handleChange(event) {\r\n       if(event.target.files[0]){\r\n        setFile(URL.createObjectURL(event.target.files[0]))\r\n       }else{\r\n        setFile(null)\r\n       }\r\n      }\r\n    return (\r\n        <div>\r\n            <img style={{ width:150 , height:150 , marginBottom:20}} src={file ? file : noImage} />\r\n            <input type=\"file\" accept=\"image/*\" onChange={(e) =>handleChange(e)} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageUploader;\r\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":8,"nodeType":"46","messageId":"47","endLine":1,"endColumn":12},{"ruleId":"44","severity":1,"message":"48","line":2,"column":49,"nodeType":"46","messageId":"47","endLine":2,"endColumn":57},{"ruleId":"44","severity":1,"message":"49","line":1,"column":16,"nodeType":"46","messageId":"47","endLine":1,"endColumn":24},{"ruleId":"50","severity":1,"message":"51","line":14,"column":13,"nodeType":"52","endLine":14,"endColumn":100},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'FormText' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]